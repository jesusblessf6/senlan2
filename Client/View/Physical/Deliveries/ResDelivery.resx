<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActualWeight" xml:space="preserve">
    <value>Actual Weight</value>
  </data>
  <data name="AddDomesticBL" xml:space="preserve">
    <value>Add Domestic BL</value>
  </data>
  <data name="AddDomesticSwitchDelivery" xml:space="preserve">
    <value>Add Domestic Switch Delivery</value>
  </data>
  <data name="AddDomesticWR" xml:space="preserve">
    <value>Add Domestic WR</value>
  </data>
  <data name="AddExportWR" xml:space="preserve">
    <value>Add Export WR</value>
  </data>
  <data name="AddIEBL" xml:space="preserve">
    <value>Add Impor/Export BL</value>
  </data>
  <data name="AddIEWR" xml:space="preserve">
    <value>Add Impor/Export WR</value>
  </data>
  <data name="AddSwitchBL" xml:space="preserve">
    <value>Add Switch BL</value>
  </data>
  <data name="ArrivalDate" xml:space="preserve">
    <value>Arrival Date</value>
  </data>
  <data name="CargoOwner" xml:space="preserve">
    <value>Cargo Owner</value>
  </data>
  <data name="Carrier" xml:space="preserve">
    <value>Carrier</value>
  </data>
  <data name="Consignor" xml:space="preserve">
    <value>Consignor</value>
  </data>
  <data name="ConsignorRequired" xml:space="preserve">
    <value>Consignor is Required!</value>
  </data>
  <data name="ContactPerson" xml:space="preserve">
    <value>Contact Person</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="Customed" xml:space="preserve">
    <value>Customed</value>
  </data>
  <data name="CustomStatus" xml:space="preserve">
    <value>Custom Status</value>
  </data>
  <data name="DataException" xml:space="preserve">
    <value>Data Exception!</value>
  </data>
  <data name="DeliveryLine" xml:space="preserve">
    <value>Delivery Line</value>
  </data>
  <data name="DeliveryList" xml:space="preserve">
    <value>Delivery List</value>
  </data>
  <data name="DeliveryOfLastMonth" xml:space="preserve">
    <value>Delivery of last Month</value>
  </data>
  <data name="DeliveryOfTheMonth" xml:space="preserve">
    <value>Delivery of the Month</value>
  </data>
  <data name="DeliveryOfTheYear" xml:space="preserve">
    <value>Delivery of the Year</value>
  </data>
  <data name="DetailRequired" xml:space="preserve">
    <value>Detail is Required!</value>
  </data>
  <data name="DomesticBLOfTheMonth" xml:space="preserve">
    <value>Domestic BL of the Month</value>
  </data>
  <data name="DomesticBLWR" xml:space="preserve">
    <value>Domestic BL/WR</value>
  </data>
  <data name="DomesticDeliveryForm" xml:space="preserve">
    <value>Domestic Delivery Form</value>
  </data>
  <data name="DomesticSwitchDelivery" xml:space="preserve">
    <value>Domestic Switch Delivery</value>
  </data>
  <data name="DomesticSwitchDeliveryDetail" xml:space="preserve">
    <value>Domestic Switch Delivery Detail</value>
  </data>
  <data name="ExportDelivery" xml:space="preserve">
    <value>Export BL</value>
  </data>
  <data name="ExportWR" xml:space="preserve">
    <value>Export WR</value>
  </data>
  <data name="ForeignBLOfTheMonth" xml:space="preserve">
    <value>Foreign BL of the Month</value>
  </data>
  <data name="HullNo" xml:space="preserve">
    <value>Hull No.</value>
  </data>
  <data name="IEBL" xml:space="preserve">
    <value>Impor/Export BL</value>
  </data>
  <data name="IEWR" xml:space="preserve">
    <value>Impor/Export WR</value>
  </data>
  <data name="ImportDelivery" xml:space="preserve">
    <value>Import BL</value>
  </data>
  <data name="ImportWR" xml:space="preserve">
    <value>Import WR</value>
  </data>
  <data name="IssuingDateRequired" xml:space="preserve">
    <value>Issuing Date is Required!</value>
  </data>
  <data name="LoadingPlace" xml:space="preserve">
    <value>Loading Place</value>
  </data>
  <data name="LoadingPort" xml:space="preserve">
    <value>Loading Port</value>
  </data>
  <data name="NotCustomed" xml:space="preserve">
    <value>Not Customed</value>
  </data>
  <data name="OldWRBLNoRequired" xml:space="preserve">
    <value>Original WR or BL No. is required!</value>
  </data>
  <data name="Original" xml:space="preserve">
    <value>Original</value>
  </data>
  <data name="PackingSpec" xml:space="preserve">
    <value>Packing Spec.</value>
  </data>
  <data name="PurchaseBLHome" xml:space="preserve">
    <value>Purchase BL Home</value>
  </data>
  <data name="PurchaseBLQuery" xml:space="preserve">
    <value>Purchase BL Query</value>
  </data>
  <data name="SalesBLQuery" xml:space="preserve">
    <value>Sales BL Query</value>
  </data>
  <data name="SalesDeliveryHome" xml:space="preserve">
    <value>Sales Delivery Home</value>
  </data>
  <data name="SwitchBL" xml:space="preserve">
    <value>Switch BL</value>
  </data>
  <data name="SwitchDeliveryDetail" xml:space="preserve">
    <value>Switch Delivery Detail</value>
  </data>
  <data name="UnloadingPlace" xml:space="preserve">
    <value>Unloading Place</value>
  </data>
  <data name="UnloadingPort" xml:space="preserve">
    <value>Unloading Port</value>
  </data>
  <data name="Warehouseman" xml:space="preserve">
    <value>Warehouseman</value>
  </data>
  <data name="WRBLNoRequired" xml:space="preserve">
    <value>WR or BL No. is Required!</value>
  </data>
  <data name="WRNo" xml:space="preserve">
    <value>WR No.</value>
  </data>
  <data name="DomesticInTransit" xml:space="preserve">
    <value>Domestic In Transit</value>
  </data>
  <data name="ModifiedAlert" xml:space="preserve">
    <value>This BL is alredy sold. Are you sure to modify it?</value>
  </data>
  <data name="PrintError" xml:space="preserve">
    <value>This is not domestic delivery, so could not be printed!</value>
  </data>
</root>