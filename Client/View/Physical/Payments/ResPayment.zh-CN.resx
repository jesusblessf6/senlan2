<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Applicant" xml:space="preserve">
    <value>申请人</value>
  </data>
  <data name="AppliedAmountRequired" xml:space="preserve">
    <value>申请金额不能为空！</value>
  </data>
  <data name="ApplyDateRequired" xml:space="preserve">
    <value>申请日期不能为空！</value>
  </data>
  <data name="ApplyingEndDate" xml:space="preserve">
    <value>申请截止日期</value>
  </data>
  <data name="ApplyingStartDate" xml:space="preserve">
    <value>申请开始日期</value>
  </data>
  <data name="ApprovalError" xml:space="preserve">
    <value>审批中/审批完成的付款申请无法编辑！</value>
  </data>
  <data name="ApprovalError2" xml:space="preserve">
    <value>审批中/审批完成的付款申请无法删除！</value>
  </data>
  <data name="ApprovalLog" xml:space="preserve">
    <value>审批日志</value>
  </data>
  <data name="DeliveryLineExisted" xml:space="preserve">
    <value>提单行已经存在！</value>
  </data>
  <data name="MyPaymentRequestDraft" xml:space="preserve">
    <value>本人付款申请草稿</value>
  </data>
  <data name="MyUnderApprovalPaymentRequest" xml:space="preserve">
    <value>本人未审批付款申请</value>
  </data>
  <data name="NotForDomesticQuota" xml:space="preserve">
    <value>合同批次不能为内贸！</value>
  </data>
  <data name="PaymentAccountError" xml:space="preserve">
    <value>付款账号的类型必须是信用证余额类型！</value>
  </data>
  <data name="PaymentAccountError2" xml:space="preserve">
    <value>付款账号的类型必须是资金类型！</value>
  </data>
  <data name="PaymentAccountRequired" xml:space="preserve">
    <value>付款账户不能为空！</value>
  </data>
  <data name="PaymentComplete" xml:space="preserve">
    <value>完成付款</value>
  </data>
  <data name="PaymentConfirm" xml:space="preserve">
    <value>确定完成付款？</value>
  </data>
  <data name="PaymentCurrencyRequired" xml:space="preserve">
    <value>付款币种不能为空！</value>
  </data>
  <data name="PaymentRequestHome" xml:space="preserve">
    <value>付款申请首页</value>
  </data>
  <data name="PaymentRequestList" xml:space="preserve">
    <value>付款申请列表</value>
  </data>
  <data name="PaymentRequestNotFound" xml:space="preserve">
    <value>找不到付款申请！</value>
  </data>
  <data name="PaymentStatus" xml:space="preserve">
    <value>付款状态</value>
  </data>
  <data name="PaymentUsageRequired" xml:space="preserve">
    <value>付款用途不能为空！</value>
  </data>
  <data name="PaymentWorkbench" xml:space="preserve">
    <value>付款工作台</value>
  </data>
  <data name="ReceiptAccountError" xml:space="preserve">
    <value>收款账号的类型必须是信用证余额类型！</value>
  </data>
  <data name="ReceiptAccountError2" xml:space="preserve">
    <value>收款账号的类型必须是资金类型！</value>
  </data>
  <data name="ReceiptAccountRequired" xml:space="preserve">
    <value>收款账户不能为空！</value>
  </data>
  <data name="ReceiptBPRequired" xml:space="preserve">
    <value>收款方不能为空！</value>
  </data>
</root>