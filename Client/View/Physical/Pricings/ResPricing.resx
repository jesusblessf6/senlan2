<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdditionalDeferFee" xml:space="preserve">
    <value>Additional Defer Fee</value>
  </data>
  <data name="AddPricing" xml:space="preserve">
    <value>Add Pricing</value>
  </data>
  <data name="AveragePrice" xml:space="preserve">
    <value>AveragePrice: </value>
  </data>
  <data name="AveragePricingDetail" xml:space="preserve">
    <value>Average Pricing Detail</value>
  </data>
  <data name="AveragePricingHome" xml:space="preserve">
    <value>Average Pricing Home</value>
  </data>
  <data name="AveragePricingList" xml:space="preserve">
    <value>Average Pricing List</value>
  </data>
  <data name="ConfirmPriced" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="DeferableQty" xml:space="preserve">
    <value>Deferable Qty</value>
  </data>
  <data name="DeferFee" xml:space="preserve">
    <value>Extension Fee</value>
  </data>
  <data name="DeferFeeError" xml:space="preserve">
    <value>Extension Fee input incorrectly!</value>
  </data>
  <data name="DeferFeeWrong" xml:space="preserve">
    <value>Extension Fee input not correctly!</value>
  </data>
  <data name="DeferQtyError" xml:space="preserve">
    <value>Extended Qty input incorrectly!</value>
  </data>
  <data name="DeferQtyError2" xml:space="preserve">
    <value>Extended Qty should not be greater than unpriced Qty!</value>
  </data>
  <data name="DeferQtyRequired" xml:space="preserve">
    <value>Extended erred Qty is required!</value>
  </data>
  <data name="DeferredPromptDate" xml:space="preserve">
    <value>New Prompt Date</value>
  </data>
  <data name="DeferredPromptDateRequired" xml:space="preserve">
    <value>New Prompt Date is required!</value>
  </data>
  <data name="DeferredQty" xml:space="preserve">
    <value>Extended Qty</value>
  </data>
  <data name="DeferringDate" xml:space="preserve">
    <value>Extension Date</value>
  </data>
  <data name="ExchangeRateWrong" xml:space="preserve">
    <value>Exchange Rate input not correctly!</value>
  </data>
  <data name="FinalPrice" xml:space="preserve">
    <value>Final Price</value>
  </data>
  <data name="FinalPriceRequired" xml:space="preserve">
    <value>Final Price is Required!</value>
  </data>
  <data name="FinalPricingWrong" xml:space="preserve">
    <value>Final Pricing input not correctly!</value>
  </data>
  <data name="ManualPricingHome" xml:space="preserve">
    <value>Manual Pricing</value>
  </data>
  <data name="ManualPricingList" xml:space="preserve">
    <value>Manual Pricing List</value>
  </data>
  <data name="OriginalUnpricingLimit" xml:space="preserve">
    <value>Original Unpricing is not allowed to edit!</value>
  </data>
  <data name="OriginalUnpricingLimit2" xml:space="preserve">
    <value>Original Unpricing is not allowed to delete!</value>
  </data>
  <data name="PricedDetail" xml:space="preserve">
    <value>Priced Quota Detail</value>
  </data>
  <data name="PricedQuota" xml:space="preserve">
    <value>Priced Quota</value>
  </data>
  <data name="PricedQuotaOfTheMonth" xml:space="preserve">
    <value>Priced Quota of the Month</value>
  </data>
  <data name="PricingDateNotNull" xml:space="preserve">
    <value>Pricing Date is required!</value>
  </data>
  <data name="PricingDateRequired" xml:space="preserve">
    <value>Pricing Date is Required!</value>
  </data>
  <data name="PricingDefer" xml:space="preserve">
    <value>Pricing Extension</value>
  </data>
  <data name="PricingDetail" xml:space="preserve">
    <value>Pricing Detail</value>
  </data>
  <data name="PricingList" xml:space="preserve">
    <value>Pricing List</value>
  </data>
  <data name="PricingNotCompleteConfirm" xml:space="preserve">
    <value>Pricing not complete. Continue?</value>
  </data>
  <data name="PricingNotFound" xml:space="preserve">
    <value>Pricing Not Found!</value>
  </data>
  <data name="PricingQty" xml:space="preserve">
    <value>Pricing Qty</value>
  </data>
  <data name="PricingQtyRequired" xml:space="preserve">
    <value>Pricing Qty is Required!</value>
  </data>
  <data name="PricingQtyWrong" xml:space="preserve">
    <value>Pricing Qty input not correctly!</value>
  </data>
  <data name="PricingReferenceRequired" xml:space="preserve">
    <value>Pricing Reference is Required!</value>
  </data>
  <data name="PricingStatus" xml:space="preserve">
    <value>Pricing Status</value>
  </data>
  <data name="QuotaNotFound" xml:space="preserve">
    <value>Quota Not Found!</value>
  </data>
  <data name="ReferencePrice" xml:space="preserve">
    <value>Reference Price</value>
  </data>
  <data name="ReferencePriceRequired" xml:space="preserve">
    <value>Reference Price is Required!</value>
  </data>
  <data name="ReferencePricingWrong" xml:space="preserve">
    <value>Reference Pricing input not correctly!</value>
  </data>
  <data name="SwitchFeeWrong" xml:space="preserve">
    <value>Switch Fee input not correctly!</value>
  </data>
  <data name="SwitchingFee" xml:space="preserve">
    <value>Switching Fee</value>
  </data>
  <data name="UnpricedDetail" xml:space="preserve">
    <value>Unpriced Quota Detail</value>
  </data>
  <data name="UnpricedQuota" xml:space="preserve">
    <value>Unpriced Quota</value>
  </data>
  <data name="PartialPricedQuota" xml:space="preserve">
    <value>Partially Priced Quota</value>
  </data>
</root>