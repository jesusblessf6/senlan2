//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;


namespace DBEntity
{
    [DataContract(IsReference = true)]
    public partial class SystemParameter: IObjectWithChangeTracker, INotifyPropertyChanged, IEntity
    {
        #region Primitive Properties
    
        [DataMember]
        public int Id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("Id");
                }
            }
        }
        private int _id;
    
        [DataMember]
        public byte[] Ver
        {
            get { return _ver; }
            set
            {
                if (_ver != value)
                {
                    _ver = value;
                    OnPropertyChanged("Ver");
                }
            }
        }
        private byte[] _ver;
    
        [DataMember]
        public decimal Pricing2Quota
        {
            get { return _pricing2Quota; }
            set
            {
                if (_pricing2Quota != value)
                {
                    _pricing2Quota = value;
                    OnPropertyChanged("Pricing2Quota");
                }
            }
        }
        private decimal _pricing2Quota;
    
        [DataMember]
        public decimal Delivery2Quota
        {
            get { return _delivery2Quota; }
            set
            {
                if (_delivery2Quota != value)
                {
                    _delivery2Quota = value;
                    OnPropertyChanged("Delivery2Quota");
                }
            }
        }
        private decimal _delivery2Quota;
    
        [DataMember]
        public decimal Inventory2Delivery
        {
            get { return _inventory2Delivery; }
            set
            {
                if (_inventory2Delivery != value)
                {
                    _inventory2Delivery = value;
                    OnPropertyChanged("Inventory2Delivery");
                }
            }
        }
        private decimal _inventory2Delivery;
    
        [DataMember]
        public bool QuotaApprove
        {
            get { return _quotaApprove; }
            set
            {
                if (_quotaApprove != value)
                {
                    _quotaApprove = value;
                    OnPropertyChanged("QuotaApprove");
                }
            }
        }
        private bool _quotaApprove;
    
        [DataMember]
        public bool VATInvoiceApprove
        {
            get { return _vATInvoiceApprove; }
            set
            {
                if (_vATInvoiceApprove != value)
                {
                    _vATInvoiceApprove = value;
                    OnPropertyChanged("VATInvoiceApprove");
                }
            }
        }
        private bool _vATInvoiceApprove;
    
        [DataMember]
        public bool PaymentRequestApprove
        {
            get { return _paymentRequestApprove; }
            set
            {
                if (_paymentRequestApprove != value)
                {
                    _paymentRequestApprove = value;
                    OnPropertyChanged("PaymentRequestApprove");
                }
            }
        }
        private bool _paymentRequestApprove;
    
        [DataMember]
        public Nullable<System.DateTime> Created
        {
            get { return _created; }
            set
            {
                if (_created != value)
                {
                    _created = value;
                    OnPropertyChanged("Created");
                }
            }
        }
        private Nullable<System.DateTime> _created;
    
        [DataMember]
        public Nullable<int> CreatedBy
        {
            get { return _createdBy; }
            set
            {
                if (_createdBy != value)
                {
                    _createdBy = value;
                    OnPropertyChanged("CreatedBy");
                }
            }
        }
        private Nullable<int> _createdBy;
    
        [DataMember]
        public Nullable<System.DateTime> Updated
        {
            get { return _updated; }
            set
            {
                if (_updated != value)
                {
                    _updated = value;
                    OnPropertyChanged("Updated");
                }
            }
        }
        private Nullable<System.DateTime> _updated;
    
        [DataMember]
        public Nullable<int> UpdatedBy
        {
            get { return _updatedBy; }
            set
            {
                if (_updatedBy != value)
                {
                    _updatedBy = value;
                    OnPropertyChanged("UpdatedBy");
                }
            }
        }
        private Nullable<int> _updatedBy;
    
        [DataMember]
        public bool IsDeleted
        {
            get { return _isDeleted; }
            set
            {
                if (_isDeleted != value)
                {
                    _isDeleted = value;
                    OnPropertyChanged("IsDeleted");
                }
            }
        }
        private bool _isDeleted;
    
        [DataMember]
        public Nullable<bool> IsLMEAgent
        {
            get { return _isLMEAgent; }
            set
            {
                if (_isLMEAgent != value)
                {
                    _isLMEAgent = value;
                    OnPropertyChanged("IsLMEAgent");
                }
            }
        }
        private Nullable<bool> _isLMEAgent;
    
        [DataMember]
        public Nullable<decimal> PricingAlert
        {
            get { return _pricingAlert; }
            set
            {
                if (_pricingAlert != value)
                {
                    _pricingAlert = value;
                    OnPropertyChanged("PricingAlert");
                }
            }
        }
        private Nullable<decimal> _pricingAlert;
    
        [DataMember]
        public string DomesticContractTemplatePath
        {
            get { return _domesticContractTemplatePath; }
            set
            {
                if (_domesticContractTemplatePath != value)
                {
                    _domesticContractTemplatePath = value;
                    OnPropertyChanged("DomesticContractTemplatePath");
                }
            }
        }
        private string _domesticContractTemplatePath;
    
        [DataMember]
        public string InternationalContractTemplatePath
        {
            get { return _internationalContractTemplatePath; }
            set
            {
                if (_internationalContractTemplatePath != value)
                {
                    _internationalContractTemplatePath = value;
                    OnPropertyChanged("InternationalContractTemplatePath");
                }
            }
        }
        private string _internationalContractTemplatePath;
    
        [DataMember]
        public string DomesticWarehouseOutTemplatePath
        {
            get { return _domesticWarehouseOutTemplatePath; }
            set
            {
                if (_domesticWarehouseOutTemplatePath != value)
                {
                    _domesticWarehouseOutTemplatePath = value;
                    OnPropertyChanged("DomesticWarehouseOutTemplatePath");
                }
            }
        }
        private string _domesticWarehouseOutTemplatePath;
    
        [DataMember]
        public string PaymentRequestTemplatePath
        {
            get { return _paymentRequestTemplatePath; }
            set
            {
                if (_paymentRequestTemplatePath != value)
                {
                    _paymentRequestTemplatePath = value;
                    OnPropertyChanged("PaymentRequestTemplatePath");
                }
            }
        }
        private string _paymentRequestTemplatePath;
    
        [DataMember]
        public string ProvisionalInvoiceTemplatePath
        {
            get { return _provisionalInvoiceTemplatePath; }
            set
            {
                if (_provisionalInvoiceTemplatePath != value)
                {
                    _provisionalInvoiceTemplatePath = value;
                    OnPropertyChanged("ProvisionalInvoiceTemplatePath");
                }
            }
        }
        private string _provisionalInvoiceTemplatePath;
    
        [DataMember]
        public string FinalInvoiceTemplatePath
        {
            get { return _finalInvoiceTemplatePath; }
            set
            {
                if (_finalInvoiceTemplatePath != value)
                {
                    _finalInvoiceTemplatePath = value;
                    OnPropertyChanged("FinalInvoiceTemplatePath");
                }
            }
        }
        private string _finalInvoiceTemplatePath;
    
        [DataMember]
        public string WarehouseOutNo
        {
            get { return _warehouseOutNo; }
            set
            {
                if (_warehouseOutNo != value)
                {
                    _warehouseOutNo = value;
                    OnPropertyChanged("WarehouseOutNo");
                }
            }
        }
        private string _warehouseOutNo;
    
        [DataMember]
        public string PricingConfirmationTemplatePath
        {
            get { return _pricingConfirmationTemplatePath; }
            set
            {
                if (_pricingConfirmationTemplatePath != value)
                {
                    _pricingConfirmationTemplatePath = value;
                    OnPropertyChanged("PricingConfirmationTemplatePath");
                }
            }
        }
        private string _pricingConfirmationTemplatePath;
    
        [DataMember]
        public Nullable<decimal> LCFinanceStatusParameter
        {
            get { return _lCFinanceStatusParameter; }
            set
            {
                if (_lCFinanceStatusParameter != value)
                {
                    _lCFinanceStatusParameter = value;
                    OnPropertyChanged("LCFinanceStatusParameter");
                }
            }
        }
        private Nullable<decimal> _lCFinanceStatusParameter;
    
        [DataMember]
        public Nullable<int> DeliveryNoFormula
        {
            get { return _deliveryNoFormula; }
            set
            {
                if (_deliveryNoFormula != value)
                {
                    _deliveryNoFormula = value;
                    OnPropertyChanged("DeliveryNoFormula");
                }
            }
        }
        private Nullable<int> _deliveryNoFormula;
    
        [DataMember]
        public bool IsUseMultipleBrands
        {
            get { return _isUseMultipleBrands; }
            set
            {
                if (_isUseMultipleBrands != value)
                {
                    _isUseMultipleBrands = value;
                    OnPropertyChanged("IsUseMultipleBrands");
                }
            }
        }
        private bool _isUseMultipleBrands;
    
        [DataMember]
        public string UploadDirectory
        {
            get { return _uploadDirectory; }
            set
            {
                if (_uploadDirectory != value)
                {
                    _uploadDirectory = value;
                    OnPropertyChanged("UploadDirectory");
                }
            }
        }
        private string _uploadDirectory;
    
        [DataMember]
        public bool BPApprove
        {
            get { return _bPApprove; }
            set
            {
                if (_bPApprove != value)
                {
                    _bPApprove = value;
                    OnPropertyChanged("BPApprove");
                }
            }
        }
        private bool _bPApprove;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
    	static ICollection<string> eagerLoadProperties = new List<string>() { };
    	public ICollection<string> EagerLoadProperties
    	{
    		get { return eagerLoadProperties; }
    	}
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion

    }
}
